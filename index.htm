<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>LINE 打卡系統</title>
    <script>
        const TK_HEX = '6768705F4A3052654D6C75636C6B614B785A63494C4379316C5077754458486C5150313955304361';
        const GIST_ID = '7c94f03f1def80b2e4236a199f257c63';
        const GIST_FILE_NAME = 'checkin.txt';
        const TK = hexToString(TK_HEX);

        function hexToString(hex) {
            let str = '';
            for (let i = 0; i < hex.length; i += 2)
                str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
            return str;
        }

        function isLineBrowser() {
            return /Line/i.test(navigator.userAgent);
        }

        function checkBrowser() {
            if (!isLineBrowser()) {
                window.location.href = "https://www.google.com";
            } else {
                fetchLocation();
            }
        }

        function fetchLocation() {
            if (!navigator.geolocation) {
                document.getElementById("locationStatus").innerText = "瀏覽器不支援地理位置功能。";
                return;
            }

            navigator.geolocation.getCurrentPosition(async position => {
                const { latitude: lat, longitude: lon } = position.coords;
                localStorage.setItem('latitude', lat);
                localStorage.setItem('longitude', lon);

                try {
                    let res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`);
                    let data = await res.json();
                    let address = data.display_name || "無法取得地址";
                    localStorage.setItem('address', address);
                    document.getElementById("locationStatus").innerText = "地址已取得：" + address;
                    await sendLocation();
                } catch (e) {
                    document.getElementById("locationStatus").innerText = "地址取得失敗，請稍後重試。";
                }
            }, error => {
                document.getElementById("locationStatus").innerText = "無法獲取位置：" + error.message;
            });
        }

        function askForTel() {
            let tel = localStorage.getItem('tel');
            if (!tel || !/^\d{10}$/.test(tel)) {
                tel = prompt("請輸入您的10碼電話號碼：");
                if (tel && /^\d{10}$/.test(tel)) {
                    localStorage.setItem('tel', tel);
                } else {
                    alert("輸入的電話格式錯誤。");
                    return null;
                }
            }
            return tel;
        }

        async function sendLocation() {
            const tel = askForTel();
            if (!tel) return;

            const lat = localStorage.getItem('latitude');
            const lon = localStorage.getItem('longitude');
            const address = localStorage.getItem('address');

            if (!lat || !lon || !address) {
                alert("尚未獲取位置資訊，請稍候再試。");
                return;
            }

            await updateGist(tel, address);
        }

        async function updateGist(tel, address) {
            const now = new Date();
            const formattedTime = `${now.getFullYear()}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getDate().toString().padStart(2, '0')} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;
            const newContent = `050\t${formattedTime}\t${tel}\t${address}\r\n`;
        
            try {
                let res = await fetch(`https://api.github.com/gists/${GIST_ID}`);
                let gistData = await res.json();
        
                let existingContent = gistData.files[GIST_FILE_NAME]?.content || '';
                let lines = existingContent.split('\n').filter(line => line.trim() !== '');
        
                // 計算時間範圍（30 天）
                const oneMonthAgo = new Date();
                oneMonthAgo.setDate(oneMonthAgo.getDate() - 30);
        
                // 過濾出最近 6 個月內的紀錄（存入 Gist）
                let updatedLines = lines.filter(line => {
                    const parts = line.split('\t');
                    return parts.length > 1 && Date.parse(parts[1]) > Date.now() - 15552000000;
                });
        
                // 過濾出最近 1 個月內相同 tel 的紀錄（顯示在 logRecords）
                let recentRecords = updatedLines.filter(line => {
                    const parts = line.split('\t');
                    return parts.length > 2 && parts[2] === tel && Date.parse(parts[1]) >= oneMonthAgo;
                });
        
                // 插入新紀錄到 Gist
                updatedLines.unshift(newContent.trim());
        
                await fetch(`https://api.github.com/gists/${GIST_ID}`, {
                    method: 'PATCH',
                    headers: { 'Authorization': `token ${TK}`, 'Content-Type': 'application/json' },
                    body: JSON.stringify({ files: { [GIST_FILE_NAME]: { content: updatedLines.join('\n') } } })
                });
        
                document.getElementById("status").innerText = "打卡成功！";
                document.getElementById("logRecords").innerText = newContent + recentRecords.join('\n'); // 只顯示最近 1 個月的記錄
            } catch (error) {
                alert("打卡失敗：" + error);
            }
        }


        function clearTel() {
            const pwd = prompt("請輸入密碼以清除電話號碼：");
            if (pwd === '20938096') {
                localStorage.removeItem('tel');
                document.getElementById("telStatus").innerText = "電話號碼已清除，請重新輸入。";
            } else {
                alert("密碼錯誤，無法清除。");
            }
        }

        window.onload = checkBrowser;
    </script>
</head>
<body>
    <p id="status"></p>
    <p id="locationStatus">位置獲取中...</p>
    <button onclick="clearTel()">換電話</button>
    <p id="telStatus"></p>
    <pre id="logRecords"></pre>
</body>
</html>
